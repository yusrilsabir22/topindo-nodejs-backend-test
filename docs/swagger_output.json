{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Topindo API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/user": {
      "get": {
        "tags": [
          "Get All User"
        ],
        "description": "Retrieve all user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Save User"
        ],
        "description": "Save user to database",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "parameter_name",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "password": {
                  "type": "string",
                  "example": "admin"
                },
                "name": {
                  "type": "string",
                  "example": "Jhon Doe"
                },
                "address": {
                  "type": "string",
                  "example": "Bandung"
                },
                "age": {
                  "type": "number",
                  "example": 29
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "081234567890"
                },
                "about": {
                  "type": "string",
                  "example": ""
                }
              },
              "required": [
                "username",
                "password",
                "name",
                "address",
                "age",
                "phoneNumber"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "fields required"
                }
              },
              "required": [
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": [
          "Get User By ID"
        ],
        "description": "Retrieve one user with defined ID",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "required": true,
            "type": "integer",
            "description": ""
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "Update User By ID"
        ],
        "description": "Update one user with defined ID",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "required": true,
            "type": "integer",
            "description": ""
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jhon Doe"
                },
                "address": {
                  "type": "string",
                  "example": "Bandung"
                },
                "age": {
                  "type": "number",
                  "example": 29
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "081234567890"
                }
              },
              "required": [
                "name",
                "address",
                "age",
                "phoneNumber"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "fields required"
                }
              },
              "required": [
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Delete User By ID"
        ],
        "description": "Delete one user with defined ID",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "required": true,
            "type": "integer",
            "description": ""
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "success to delete user with id 1 and name John Doe"
                }
              },
              "required": [
                "message"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "fields required"
                }
              },
              "required": [
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": [
          "Login authentication"
        ],
        "description": "Retrieve access token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "password": {
                  "type": "string",
                  "example": "admin"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token-abcd"
                }
              },
              "required": [
                "token"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "fields required"
                }
              },
              "required": [
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "username or password doesn't match"
                }
              },
              "required": [
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "username": {
          "type": "string",
          "example": "admin"
        },
        "password": {
          "type": "string",
          "example": "admin"
        },
        "name": {
          "type": "string",
          "example": "test"
        },
        "address": {
          "type": "string",
          "example": "Bandung"
        },
        "age": {
          "type": "number",
          "example": 25
        },
        "phoneNumber": {
          "type": "string",
          "example": "081234567890"
        }
      }
    }
  }
}